FROM node:20-bullseye AS builder

ARG NODE_ENV=production
ENV NODE_ENV=$NODE_ENV

RUN apt-get update \
    && apt-get install -y ca-certificates netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY src/workers/package*.json ./
COPY src/workers/tsconfig.json ./

RUN if [ "$NODE_ENV" = "development" ]; then npm install; else npm install --only=production; fi

COPY ./src/workers .

RUN npm run build

# ---
FROM node:20-bullseye AS dev
WORKDIR /app
COPY --from=builder /app /app
ENV NODE_ENV=development
CMD ["npx", "nodemon", "--watch", "./", "--ext", "ts", "--exec", "npx", "ts-node", "index.ts"]

# ---
FROM gcr.io/distroless/nodejs20-debian11 AS prod
COPY --from=builder /app /app
WORKDIR /app
CMD ["node", "build/worker.js"]

# ---
ARG NODE_ENV=production
FROM prod AS final

# Use dev stage if NODE_ENV=development
FROM dev AS final-dev

# Select the correct final stage
# (docker-compose can override the target with build.target)